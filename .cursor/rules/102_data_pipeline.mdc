---
description: 
globs: 
alwaysApply: false
---
# Data Pipeline & Schema

## Pipeline Flow
Social APIs → Filter (7 days, >50K views, >5K likes) → Transcript → Summary → Embed → Neo4j

## Neo4j Schema
```cypher
// Core nodes
CREATE (v:Video {
  id: String, platform: String, url: String, title: String,
  views: Integer, likes: Integer, shares: Integer,
  transcript: String, summary: String, embedding: [Float],
  hashtags: [String], caption: String, created_at: DateTime
})

CREATE (t:Trend {
  name: String, category: String, strength: Float,
  viral_score: Float, first_seen: DateTime, peak_date: DateTime
})

CREATE (c:Creator {
  username: String, platform: String, follower_count: Integer,
  avg_engagement: Float, niche: String
})

// Relationships
CREATE (v)-[:BELONGS_TO]->(t)
CREATE (v)-[:CREATED_BY]->(c)
CREATE (v)-[:SIMILAR_TO {similarity: Float}]->(v2:Video)
```

## Processing Steps
1. Collect viral content from 2 platforms (TikTok + Instagram)
2. Extract transcripts using Whisper
3. Generate summaries with GPT-4
4. Create embeddings with SentenceTransformers
5. Store in Neo4j with vector index for similarity search
