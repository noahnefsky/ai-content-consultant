---
description: 
globs: 
alwaysApply: false
---
# Backend Architecture

## Structure
```
backend/
├── main.py              # FastAPI app + CORS
├── api/
│   ├── routes/          # Endpoint modules
│   │   ├── ideas.py     # POST /generate-idea
│   │   ├── optimize.py  # POST /optimize-video
│   │   └── search.py    # POST /search-similar
│   └── ws.py           # WebSocket for real-time updates
├── services/
│   ├── ingestion.py    # Social media data collection
│   ├── embedding.py    # Summary creation + embeddings
│   ├── search.py       # Semantic search in Neo4j
│   └── llm.py          # OpenAI content generation
├── models/
│   ├── requests.py     # Pydantic request models
│   ├── responses.py    # Pydantic response models
│   └── entities.py     # Neo4j node models
└── pipelines/
    └── viral_content.py # Data ingestion pipeline
```

## Core Principles
• All endpoints async with proper error handling
• Pydantic validation for all I/O
• WebSocket updates for long-running operations
• Dependency injection for services
